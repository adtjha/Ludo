{"version":3,"sources":["Components/coordinates.js","Components/dice.js","Components/piece.js","Components/step.js","Components/square.js","Components/board.js","ketchup.js"],"names":["boardSize","spacing","COMMON","START","FINAL","END","coordinates","squares","color","start","x","y","size","path","players","isThere","icon","location","home","stepStart","stepFinal","final","center","end","steps","safeSteps","Dice","values","changed","current","show","rollAllowed","p5board","random","roll","console","error","randomArray","currentRandom","i","getRandom","push","setTimeout","fill","rect","textSize","text","pop","Piece","r","highlight","stroke","strokeWeight","strokeJoin","ROUND","ellipse","selected","stepLocation","e","step","offsetX","offsetY","log","game","dice","move","count","choice","props","createVector","switchPlayer","info","update","Step","triangle","id","type","safe","stepAhead","forEach","s","p","currentIndex","property","value","Square","offset","rectMode","CORNER","render","moveAllowed","f","finalStep","piece","find","getLocation","newPiece","outside","player","length","state","mouseClicked","board","index","square","filter","setSteps","sketch","ludo","colors","setup","createCanvas","draw","background","onclick","play","currentSquare","currentDice","isOut","rollDice","p5"],"mappings":"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","file":"ketchup.192a9065.js","sourceRoot":"..\\src","sourcesContent":["\r\nexport const boardSize = 500;\r\nexport const spacing = boardSize / 13;\r\nexport const COMMON = 'COMMON';\r\nexport const START = 'START';\r\nexport const FINAL = 'FINAL';\r\nexport const END = 'END';\r\n\r\nexport const coordinates = {\r\n    squares: [{\r\n        color: 'red',\r\n        start: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        size: 5,\r\n        path: [-1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\r\n            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48\r\n        ],\r\n        players: [{\r\n            isThere: true,\r\n            icon: 'R1',\r\n            location: {\r\n                x: 1,\r\n                y: 1\r\n            },\r\n            home: {\r\n                x: 1,\r\n                y: 1\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'R2',\r\n            location: {\r\n                x: 1,\r\n                y: 3\r\n            },\r\n            home: {\r\n                x: 1,\r\n                y: 3\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'R3',\r\n            location: {\r\n                x: 3,\r\n                y: 1\r\n            },\r\n            home: {\r\n                x: 3,\r\n                y: 1\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'R4',\r\n            location: {\r\n                x: 3,\r\n                y: 3\r\n            },\r\n            home: {\r\n                x: 3,\r\n                y: 3\r\n            }\r\n        }],\r\n        stepStart: {\r\n            x: 1,\r\n            y: 5\r\n        },\r\n        stepFinal: [{\r\n            x: 1,\r\n            y: 6\r\n        }, {\r\n            x: 2,\r\n            y: 6\r\n        }, {\r\n            x: 3,\r\n            y: 6\r\n        }, {\r\n            x: 4,\r\n            y: 6\r\n        }],\r\n        final: {\r\n            x: 5,\r\n            y: 6\r\n        }\r\n    }, {\r\n        color: 'yellow',\r\n        start: {\r\n            x: 0,\r\n            y: 8\r\n        },\r\n        size: 5,\r\n        path: [-1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\r\n            25, 26, 27, 28, 29, 30, 31, 32, 44, 45, 46, 47, 48\r\n        ],\r\n        players: [{\r\n            isThere: true,\r\n            icon: 'Y1',\r\n            location: {\r\n                x: 1,\r\n                y: 9\r\n            },\r\n            home: {\r\n                x: 1,\r\n                y: 9\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'Y2',\r\n            location: {\r\n                x: 1,\r\n                y: 11\r\n            },\r\n            home: {\r\n                x: 1,\r\n                y: 11\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'Y3',\r\n            location: {\r\n                x: 3,\r\n                y: 9\r\n            },\r\n            home: {\r\n                x: 3,\r\n                y: 9\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'Y4',\r\n            location: {\r\n                x: 3,\r\n                y: 11\r\n            },\r\n            home: {\r\n                x: 3,\r\n                y: 11\r\n            }\r\n        }],\r\n        stepStart: {\r\n            x: 5,\r\n            y: 11\r\n        },\r\n        stepFinal: [{\r\n            x: 6,\r\n            y: 11\r\n        }, {\r\n            x: 6,\r\n            y: 10\r\n        }, {\r\n            x: 6,\r\n            y: 9\r\n        }, {\r\n            x: 6,\r\n            y: 8\r\n        }],\r\n        final: {\r\n            x: 6,\r\n            y: 7\r\n        }\r\n    }, {\r\n        color: 'green',\r\n        start: {\r\n            x: 8,\r\n            y: 0\r\n        },\r\n        size: 5,\r\n        path: [-1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\r\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 44, 45, 46, 47, 48\r\n        ],\r\n        players: [{\r\n            isThere: true,\r\n            icon: 'G1',\r\n            location: {\r\n                x: 9,\r\n                y: 1\r\n            },\r\n            home: {\r\n                x: 9,\r\n                y: 1\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'G2',\r\n            location: {\r\n                x: 11,\r\n                y: 1\r\n            },\r\n            home: {\r\n                x: 11,\r\n                y: 1\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'G3',\r\n            location: {\r\n                x: 9,\r\n                y: 3\r\n            },\r\n            home: {\r\n                x: 9,\r\n                y: 3\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'G4',\r\n            location: {\r\n                x: 11,\r\n                y: 3\r\n            },\r\n            home: {\r\n                x: 11,\r\n                y: 3\r\n            }\r\n        }],\r\n        stepStart: {\r\n            x: 7,\r\n            y: 1\r\n        },\r\n        stepFinal: [{\r\n            x: 6,\r\n            y: 1\r\n        }, {\r\n            x: 6,\r\n            y: 2\r\n        }, {\r\n            x: 6,\r\n            y: 3\r\n        }, {\r\n            x: 6,\r\n            y: 4\r\n        }],\r\n        final: {\r\n            x: 6,\r\n            y: 5\r\n        }\r\n    }, {\r\n        color: 'blue',\r\n        start: {\r\n            x: 8,\r\n            y: 8\r\n        },\r\n        size: 5,\r\n        path: [-1, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\r\n            14, 15, 16, 17, 18, 19, 20, 21, 44, 45, 46, 47, 48\r\n        ],\r\n        players: [{\r\n            isThere: true,\r\n            icon: 'B1',\r\n            location: {\r\n                x: 9,\r\n                y: 9\r\n            },\r\n            home: {\r\n                x: 9,\r\n                y: 9\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'B2',\r\n            location: {\r\n                x: 9,\r\n                y: 11\r\n            },\r\n            home: {\r\n                x: 9,\r\n                y: 11\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'B3',\r\n            location: {\r\n                x: 11,\r\n                y: 9\r\n            },\r\n            home: {\r\n                x: 11,\r\n                y: 9\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'B4',\r\n            location: {\r\n                x: 11,\r\n                y: 11\r\n            },\r\n            home: {\r\n                x: 11,\r\n                y: 11\r\n            }\r\n        }],\r\n        stepStart: {\r\n            x: 11,\r\n            y: 7\r\n        },\r\n        stepFinal: [{\r\n            x: 11,\r\n            y: 6\r\n        }, {\r\n            x: 10,\r\n            y: 6\r\n        }, {\r\n            x: 9,\r\n            y: 6\r\n        }, {\r\n            x: 8,\r\n            y: 6\r\n        }],\r\n        final: {\r\n            x: 7,\r\n            y: 6\r\n        }\r\n    }],\r\n    center: {\r\n        start: {\r\n            x: 5,\r\n            y: 5\r\n        },\r\n        end: {\r\n            x: 7,\r\n            y: 7\r\n        }\r\n    },\r\n    steps: [{\r\n        x: 0,\r\n        y: 5\r\n    }, {\r\n        x: 1,\r\n        y: 5\r\n    }, {\r\n        x: 2,\r\n        y: 5\r\n    }, {\r\n        x: 3,\r\n        y: 5\r\n    }, {\r\n        x: 4,\r\n        y: 5\r\n    }, {\r\n        x: 5,\r\n        y: 4\r\n    }, {\r\n        x: 5,\r\n        y: 3\r\n    }, {\r\n        x: 5,\r\n        y: 2\r\n    }, {\r\n        x: 5,\r\n        y: 1\r\n    }, {\r\n        x: 5,\r\n        y: 0\r\n    }, {\r\n        x: 6,\r\n        y: 0\r\n    }, {\r\n        x: 7,\r\n        y: 0\r\n    }, {\r\n        x: 7,\r\n        y: 1\r\n    }, {\r\n        x: 7,\r\n        y: 2\r\n    }, {\r\n        x: 7,\r\n        y: 3\r\n    }, {\r\n        x: 7,\r\n        y: 4\r\n    }, {\r\n        x: 8,\r\n        y: 5\r\n    }, {\r\n        x: 9,\r\n        y: 5\r\n    }, {\r\n        x: 10,\r\n        y: 5\r\n    }, {\r\n        x: 11,\r\n        y: 5\r\n    }, {\r\n        x: 12,\r\n        y: 5\r\n    }, {\r\n        x: 12,\r\n        y: 6\r\n    }, {\r\n        x: 12,\r\n        y: 7\r\n    }, {\r\n        x: 11,\r\n        y: 7\r\n    }, {\r\n        x: 10,\r\n        y: 7\r\n    }, {\r\n        x: 9,\r\n        y: 7\r\n    }, {\r\n        x: 8,\r\n        y: 7\r\n    }, {\r\n        x: 7,\r\n        y: 8\r\n    }, {\r\n        x: 7,\r\n        y: 9\r\n    }, {\r\n        x: 7,\r\n        y: 10\r\n    }, {\r\n        x: 7,\r\n        y: 11\r\n    }, {\r\n        x: 7,\r\n        y: 12\r\n    }, {\r\n        x: 6,\r\n        y: 12\r\n    }, {\r\n        x: 5,\r\n        y: 12\r\n    }, {\r\n        x: 5,\r\n        y: 11\r\n    }, {\r\n        x: 5,\r\n        y: 10\r\n    }, {\r\n        x: 5,\r\n        y: 9\r\n    }, {\r\n        x: 5,\r\n        y: 8\r\n    }, {\r\n        x: 4,\r\n        y: 7\r\n    }, {\r\n        x: 3,\r\n        y: 7\r\n    }, {\r\n        x: 2,\r\n        y: 7\r\n    }, {\r\n        x: 1,\r\n        y: 7\r\n    }, {\r\n        x: 0,\r\n        y: 7\r\n    }, {\r\n        x: 0,\r\n        y: 6\r\n    }],\r\n    safeSteps: [1, 7, 12, 18, 23, 29, 34, 40],\r\n}\r\n","\r\nimport { p5board } from '../ketchup.js'\r\n\r\nexport default class Dice {\r\n  constructor() {\r\n    //this.location = createVector(x, y, size);\r\n    this.values = [4, 5, 6];\r\n    this.location = {\r\n      x: 235,\r\n      y: 545\r\n    };\r\n    this.spacing = 500 / 13;\r\n    this.changed = false;\r\n    this.current = 'D';\r\n    this.show = true;\r\n    this.rollAllowed = true;\r\n  }\r\n  getRandom() {\r\n    return p5board.random(this.values);\r\n  }\r\n  reset() {\r\n    this.changed = false;\r\n    this.current = 0;\r\n    this.show = true;\r\n  }\r\n  onclick() {\r\n    if (this.rollAllowed) {\r\n      this.roll();\r\n    } else {\r\n      console.error('Rolling Dice Not Allowed');\r\n    }\r\n  }\r\n  roll() {\r\n    this.show = false;\r\n    var randomArray = [],\r\n      currentRandom;\r\n    for (var i = 0; i < 1000; i++) {\r\n      currentRandom = this.getRandom();\r\n      this.current = currentRandom;\r\n      randomArray.push(currentRandom);\r\n    }\r\n    this.current = p5board.random(randomArray);\r\n    this.changed = true;\r\n    setTimeout(() => {\r\n      this.show = true;\r\n    }, 1000);\r\n    this.rollAllowed = false;\r\n  }\r\n  render() {\r\n    p5board.push();\r\n    if (this.show) {\r\n      p5board.fill('white');\r\n      p5board.rect(this.location.x, this.location.y, this.spacing, this.spacing);\r\n      p5board.fill(0);\r\n      p5board.textSize(32);\r\n      p5board.text(this.current, this.location.x + 10, this.location.y + 30);\r\n    }\r\n    if (this.changed) {\r\n      p5board.fill(0);\r\n      p5board.textSize(256);\r\n      p5board.text(this.current, 180, 300);\r\n      setTimeout(() => {\r\n        this.changed = false;\r\n      }, 600);\r\n    }\r\n    p5board.pop();\r\n  }\r\n}\r\n","import { spacing } from './coordinates.js'\r\nimport { p5board } from '../ketchup.js'\r\n\r\nexport default class Piece {\r\n  constructor(x, y, home, spacing, icon, path) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.home = home;\r\n    this.highlight = false;\r\n    this.spacing = spacing;\r\n    this.path = path;\r\n    this.color = 0;\r\n    this.location = {\r\n      x: this.x * spacing,\r\n      y: this.y * spacing\r\n    };\r\n    this.icon = icon;\r\n    this.selected = false;\r\n    this.stepLocation = 0;\r\n  }\r\n  mouseClicked(e, step) {\r\n    //moving piece when clicked on.\r\n    if ((e.offsetX > this.location.x && e.offsetX < (this.location.x + this.spacing)) && (e.offsetY > this.location.y && e.offsetY < (this.location.y +\r\n        this.spacing))) {\r\n      //Mouse Clicked.\r\n      console.log('Mouse Clicked on Piece  : ' + this.icon + ',  Move :  ' + game.dice.current);\r\n      if (this.stepLocation > 0) {\r\n        p5board.move({\r\n          icon: this.icon,\r\n          count: game.dice.current\r\n        });\r\n      }\r\n    }\r\n  }\r\n  update(choice, props) {\r\n    //location\r\n    if (choice === 'move') {\r\n      console.log('updating the location of piece : ' + this.icon);\r\n      this.x = props.x;\r\n      this.y = props.y;\r\n      this.location = p5board.createVector(this.x * spacing, this.y * spacing);\r\n      p5board.switchPlayer();\r\n    } else if (choice === 'select') {\r\n      console.info('selected : ' + this.icon);\r\n      var location = this.path.location(this.path.count[this.stepLocation]);\r\n      if (this.path.count[this.stepLocation + 1]) {\r\n        this.update('move', location);\r\n      } else {\r\n        console.error('Piece  : ' + this.icon + '  Reached');\r\n        p5board.switchPlayer();\r\n      }\r\n    }\r\n  }\r\n  render = (r) => {\r\n    p5board.push();\r\n    //Drawing homes for players to be in.\r\n    p5board.fill(255);\r\n    if (this.highlight) {\r\n      p5board.stroke(this.color);\r\n      p5board.strokeWeight(5);\r\n      p5board.strokeJoin(ROUND);\r\n    }\r\n    p5board.rect(this.home.x * this.spacing, this.home.y * this.spacing, this.spacing, this.spacing, 10);\r\n    p5board.pop();\r\n    p5board.push();\r\n    p5board.strokeWeight(3);\r\n    p5board.fill(this.color);\r\n    p5board.ellipse(this.location.x + (this.spacing * 0.5), this.location.y + (this.spacing * 0.5), 0.5 * this.spacing, 0.5 * this.spacing);\r\n    p5board.pop();\r\n  }\r\n\r\n}\r\n","import { COMMON, FINAL } from './coordinates.js'\r\nimport { p5board } from '../ketchup.js'\r\n\r\nexport default class Step {\r\n  //store the steps template here.\r\n  constructor(x, y, spacing, count) {\r\n    //initialize each step here.\r\n    this.x = x;\r\n    this.y = y;\r\n    this.count = count;\r\n    this.location = {\r\n      x: x * spacing,\r\n      y: y * spacing\r\n    };\r\n    //spacing constant.\r\n    this.size = spacing;\r\n    //color of the step.\r\n    this.color = 255;\r\n    this.id = {\r\n      type: COMMON,\r\n      safe: false\r\n    };\r\n  }\r\n  getLocation() {\r\n    return ({\r\n      x: this.x,\r\n      y: this.y\r\n    });\r\n  }\r\n  mouseClicked(e) {\r\n    if ((e.offsetX > this.location.x && e.offsetX < (this.location.x + this.size)) && (e.offsetY > this.location.y && e.offsetY < (this.location.y +\r\n        this.size))) {\r\n      //Step to which the current piece will move to\r\n      var stepAhead = this.count + p5board.game.dice.current;\r\n      //Check if any piece is already there, if yes, remove\r\n      p5board.game.squares.forEach(s => {\r\n        s.players.forEach(p => {\r\n          if (p.stepLocation === stepAhead && s.count != p5board.game.currentIndex) {\r\n            console.log('Found and Removing : ' + p.icon);\r\n            p5board.move({\r\n              icon: p.icon,\r\n              count: (-1) * p.stepLocation,\r\n            })\r\n          }\r\n        });\r\n      });\r\n      p5board.game.squares[p5board.game.currentIndex].players.forEach(p => {\r\n        //check if player is here,\r\n        if (p.path.count[p.stepLocation] === this.count) {\r\n          //found piece, move it.\r\n          p5board.move({\r\n            icon: p.icon,\r\n            count: p5board.game.dice.current\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n  update(property, value) {\r\n    //update the steps from here.\r\n    this[property] = value;\r\n  }\r\n  \r\n  render = () => {\r\n    //render the steps from here.\r\n    if (this.count < 48) {\r\n      p5board.push();\r\n      p5board.fill(this.color);\r\n      p5board.stroke(1);\r\n      p5board.rect(this.location.x, this.location.y, this.size, this.size);\r\n      p5board.pop();\r\n    } else {\r\n      if (this.color === 'red') {\r\n        //Red Triangle goes here.\r\n        p5board.push();\r\n        p5board.fill(this.color);\r\n        p5board.stroke(1);\r\n        p5board.triangle(this.location.x + (this.size * 1.5), this.location.y + (this.size * 0.5), this.location.x, this.location.y - this.size, this\r\n          .location.x, this.location.y + (this.size * 2));\r\n        p5board.pop();\r\n      } else if (this.color === 'green') {\r\n        //green\r\n        p5board.push();\r\n        p5board.fill(this.color);\r\n        p5board.stroke(1);\r\n        p5board.triangle(this.location.x + (this.size * 0.5), this.location.y + (this.size * 1.5), this.location.x + (2 * this.size), this.location.y, this\r\n          .location.x - this.size, this.location.y);\r\n        p5board.pop();\r\n      } else if (this.color === 'yellow') {\r\n        //yellow\r\n        p5board.push();\r\n        p5board.fill(this.color);\r\n        p5board.stroke(1);\r\n        p5board.triangle(this.location.x + (this.size * 0.5), this.location.y - (this.size * 0.5), this.location.x - this.size, this.location.y + this.size,\r\n          this.location.x + (this.size * 2), this.location.y + this.size);\r\n        p5board.pop();\r\n      } else if (this.color === 'blue') {\r\n        //blue\r\n        p5board.push();\r\n        p5board.fill(this.color);\r\n        p5board.stroke(1);\r\n        p5board.triangle(this.location.x - (this.size * 0.5), this.location.y + (this.size * 0.5), this.location.x + this.size, this.location.y - this.size,\r\n          this.location.x + this.size, this.location.y + (this.size * 2));\r\n        p5board.pop();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { spacing, FINAL, CORNER, ROUND } from './coordinates.js'\r\nimport Piece from './piece.js'\r\nimport Step from './step.js'\r\nimport { p5board } from '../ketchup.js'\r\n\r\nexport default class Square {\r\n  //store the square template here.\r\n  constructor(props) {\r\n    //initialize the squares from here.\r\n    this.x = props.start.x;\r\n    this.y = props.start.y;\r\n    this.highlight = false;\r\n    this.moveAllowed = false;\r\n    this.count = props.count;\r\n    //spacing constant which is used to draw the spacing.\r\n    this.spacing = props.spacing;\r\n    //color of the square.\r\n    this.color = props.color;\r\n    //data of players pieces.\r\n    //this.players = props.players;\r\n    this.players = [];\r\n    this.path = props.path;\r\n    //this.location = createVector(props.start, props.end);\r\n    this.location = {\r\n      x: this.x * this.spacing,\r\n      y: this.y * this.spacing\r\n    };\r\n    this.size = props.size * this.spacing;\r\n    //PATH: starting step of the player\r\n    this.stepStart = props.stepStart;\r\n    //PATH: final step of player\r\n    this.stepFinal = [];\r\n    //Generating Final Squares.\r\n    props.stepFinal.forEach((f, i) => {\r\n      var finalStep = new Step(f.x, f.y, spacing, (i + 44));\r\n      finalStep.update('color', this.color);\r\n      finalStep.update('id', {\r\n        type: FINAL,\r\n        safe: true\r\n      });\r\n      this.stepFinal.push(finalStep);\r\n    });\r\n    //PATH: pieces which have reached the final succesfuly.\r\n    var final = new Step(props.final.x, props.final.y, spacing, 48);\r\n    final.update('color', this.color);\r\n    this.final = final;\r\n    props.players.forEach(piece => {\r\n      var path = {\r\n        count: this.path,\r\n        location: (count) => {\r\n          if (count === -1) {\r\n            //home\r\n            return piece.home;\r\n          } else if (count > -1 && count < 44) {\r\n            //steps\r\n            return p5board.game.steps.find(step => count === step.count).getLocation();\r\n          } else if (count > 43 && count < 47) {\r\n            //final\r\n            return this.stepFinal.find(step => count === step.count).getLocation();\r\n          } else if (count === 48) {\r\n            //end\r\n            return this.final.getLocation();\r\n          }\r\n        },\r\n      }\r\n      var newPiece = new Piece(piece.location.x, piece.location.y, piece.home, this.spacing, piece.icon, path);\r\n      newPiece.color = this.color;\r\n      this.players.push(newPiece);\r\n    });\r\n  }\r\n  isOut() {\r\n    var outside = [];\r\n    this.players.forEach(player => {\r\n      if (player.stepLocation === -1) {\r\n        console.log('INSIDE');\r\n      } else if (player.stepLocation > 0 && player.stepLocation < 48) {\r\n        outside.push(player.icon);\r\n      }\r\n    });\r\n    if (outside.length < this.players.length && outside.length > 0) {\r\n      return ({\r\n        state: true,\r\n        count: outside\r\n      });\r\n    } else {\r\n      return ({\r\n        state: false,\r\n        count: outside\r\n      });\r\n    }\r\n  }\r\n  update(props) {\r\n    //update the squares from here.\r\n    this.players.forEach(player => {\r\n      if (player.icon === props.icon) {\r\n        console.log(props.dice);\r\n      }\r\n    })\r\n  }\r\n  mouseClicked(e) {\r\n    if ((e.offsetX > this.location.x && e.offsetX < (this.location.x + this.size)) && (e.offsetY > this.location.y && e.offsetY < (this.location.y +\r\n        this.size))) {\r\n      this.players.forEach(p => {\r\n        var x = p.location.x,\r\n          y = p.location.y;\r\n        if ((e.offsetX > x && e.offsetX < (x + this.spacing)) && (e.offsetY > y && e.offsetY < (y + this.spacing))) {\r\n          if (this.moveAllowed && p.stepLocation === 0) {\r\n            //check if movement is valid\r\n            console.log('Moving Out Of HOME');\r\n            p5board.move({\r\n              icon: p.icon,\r\n              count: 1\r\n            });\r\n          } else {\r\n            console.log('CLICKED BUT NO MOVEMENT ALLOWED');\r\n            p.mouseClicked(e);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    this.stepFinal.forEach(step => {\r\n      step.mouseClicked(e)\r\n    });\r\n    this.final.mouseClicked(e);\r\n  }\r\n  \r\n  render = () => {\r\n    var offset = 1;\r\n    p5board.push();\r\n      //Darwing base Squares. using the CORNER method.\r\n      p5board.rectMode(CORNER);\r\n      p5board.fill(this.color);\r\n      //check if this square's turn.\r\n      if (this.highlight) {\r\n        offset = 10;\r\n        p5board.stroke(this.color);\r\n        p5board.strokeWeight(offset);\r\n        p5board.strokeJoin(ROUND);\r\n        p5board.fill(255);\r\n      }\r\n      p5board.rect(this.location.x + (offset / 4), this.location.y + (offset / 4), this.size - (offset / 2), this.size - (offset / 2));\r\n    p5board.pop();\r\n    p5board.push();\r\n      this.stepFinal.forEach(step => step.render());\r\n      this.final.render();\r\n      //Drawing Players if they are there.\r\n      this.players.forEach(p => p.render());\r\n    p5board.pop();\r\n  }\r\n  \r\n}\r\n","import { coordinates, spacing } from './coordinates.js'\r\nimport Dice from './dice.js'\r\nimport Piece from './piece.js'\r\nimport Square from './square.js'\r\nimport Step from './step.js'\r\n\r\nexport default class board {\r\n    constructor(props) {\r\n        //Initialize all the class variables here.\r\n        this.squares = [];\r\n        console.log(\"Board.js is here\")\r\n        const final = [];\r\n        this.dice = new Dice();\r\n        //Initializes homeSquares\r\n        props.squares.forEach((e, index) => {\r\n            //spacing constant\r\n            e.spacing = spacing;\r\n            e.count = index;\r\n            //creating new square from model SQUARE\r\n            const square = new Square(e);\r\n            //pushing the newly created homeSquares.\r\n            this.squares.push(square);\r\n            //pushing final data into final array.\r\n            final.push({\r\n                color: e.color,\r\n                location: e.final\r\n            });\r\n        });\r\n        //Steps Array.\r\n        this.steps = [];\r\n        var count = 0;\r\n        //Pushing a new step, and inserting into Array\r\n        props.steps.forEach(s => {\r\n            var step = new Step(s.x, s.y, spacing, count++);\r\n            var safe = props.safeSteps.filter(e => e === step.count);\r\n            if (safe.length > 0) {\r\n                step.id.safe = true;\r\n            } else {\r\n                step.id.safe = false;\r\n            }\r\n            this.steps.push(step);\r\n        });\r\n        //Current Player Count\r\n        this.currentIndex = 0;\r\n        //Setting up start squares.\r\n        this.setSteps(this.squares);\r\n    }\r\n    setSteps(squares) {\r\n        squares.forEach(e => {\r\n            //Coloring Start Squares\r\n            this.steps.forEach(s => {\r\n                if (s.x === e.stepStart.x && s.y === e.stepStart.y) {\r\n                    s.update('color', e.color);\r\n                    s.id.type = 'START';\r\n                }\r\n            });\r\n            if (e.count === this.currentIndex) {\r\n                this.update('switch', {\r\n                    count: this.currentIndex\r\n                });\r\n            }\r\n        });\r\n    }\r\n    update(choice, props) {\r\n        //update the player's position from here.\r\n        if (choice === 'move') {\r\n            this.squares.forEach(square => {\r\n                if (square.color === props.color) {\r\n                    square.update({\r\n                        icon: props.icon,\r\n                        location: props.location\r\n                    });\r\n                }\r\n            })\r\n        } else if (choice === 'switch') {\r\n            this.squares.forEach(square => {\r\n                square.highlight = false\r\n            });\r\n            this.squares.forEach(square => {\r\n                if (square.count === props.count) {\r\n                    square.highlight = true;\r\n                }\r\n            })\r\n        }\r\n    }\r\n    mouseClicked(e) {\r\n        this.squares.forEach(square => {\r\n            square.mouseClicked(e)\r\n        });\r\n        this.steps.forEach(step => {\r\n            step.mouseClicked(e)\r\n        });\r\n    }\r\n    render() {\r\n        this.steps.forEach(e => {\r\n            e.render()\r\n        });\r\n        this.squares.forEach(e => {\r\n            if (e.count != this.currentIndex) {\r\n                e.render();\r\n            }\r\n        });\r\n        this.squares[this.currentIndex].render();\r\n        this.dice.render();\r\n    }\r\n}","import board from './Components/board.js'\r\nimport {\r\n  coordinates\r\n} from './Components/coordinates.js'\r\nimport Dice from './Components/dice.js'\r\nimport Piece from './Components/piece.js'\r\nimport Square from './Components/square.js'\r\nimport Step from './Components/step.js'\r\n\r\nconst sketch = (s) => {\r\n\r\n  s.game = {},\r\n    s.i = 0,\r\n    s.ludo = {},\r\n    s.colors = ['yellow', 'blue', 'green', 'red'];\r\n\r\n  s.setup = () => {\r\n    s.createCanvas(500, 600);\r\n    s.game = new board(coordinates);\r\n  }\r\n\r\n  s.draw = () => {\r\n    s.background(255);\r\n    s.game.render();\r\n  }\r\n\r\n  s.mouseClicked = (e) => {\r\n    var dice = s.game.dice.location,\r\n      spacing = s.game.dice.spacing;\r\n    if ((e.offsetX > dice.x && e.offsetX < dice.x + spacing) && (e.offsetY > dice.y && e.offsetY < dice.y + spacing)) {\r\n      s.game.dice.onclick();\r\n      s.play();\r\n      //      s.moveSound.play();\r\n    }\r\n    s.game.mouseClicked(e);\r\n  }\r\n\r\n  s.play = () => {\r\n    const currentSquare = s.game.squares[s.game.currentIndex];\r\n    const currentDice = s.game.dice.current;\r\n\r\n    if (currentSquare.isOut().state) {\r\n      //atleast one piece is out,\r\n      if (currentSquare.isOut().count.length === 1 && currentDice != 6) {\r\n        //only one is out, so move it\r\n        currentSquare.players.forEach(p => {\r\n          if (p.icon === currentSquare.isOut().count[0]) {\r\n            console.log('only one is out, so move it');\r\n            s.move({\r\n              icon: p.icon,\r\n              count: currentDice\r\n            });\r\n          }\r\n        })\r\n      } else if (currentSquare.isOut().count.length > 1) {\r\n        //more than one is out, move according to choice.\r\n        currentSquare.moveAllowed = true;\r\n      }\r\n    } else {\r\n      //none of the pieces are outside.\r\n      if (currentDice === 6) {\r\n        currentSquare.moveAllowed = true;\r\n      } else {\r\n        s.switchPlayer();\r\n      }\r\n    }\r\n  }\r\n\r\n  s.move = (props) => {\r\n    s.game.squares[s.game.currentIndex].players.forEach(p => {\r\n      if (p.icon === props.icon) {\r\n        console.info('Found Piece  : ' + p.icon);\r\n        if (p.stepLocation + props.count + 1 < p.path.count.length) {\r\n          console.info('MOVING : ' + props.count);\r\n          p.stepLocation += props.count;\r\n          p.update('select');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  s.rollDice = (state) => {\r\n    s.game.dice.rollAllowed = state;\r\n  }\r\n\r\n  s.switchPlayer = () => {\r\n\r\n    console.log('switching__' + ++s.i + '  Dice : ' + s.game.dice.current + '  Color : ' + s.game.squares[s.game.currentIndex].color);\r\n\r\n    if (s.game.currentIndex <= 2) {\r\n      s.game.currentIndex += 1;\r\n    } else {\r\n      s.game.currentIndex = 0;\r\n    }\r\n    s.game.update('switch', {\r\n      count: s.game.currentIndex\r\n    });\r\n    s.rollDice(true);\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const p5board = new p5(sketch);\r\n"]}