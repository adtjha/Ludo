{"version":3,"sources":["Components/board.js","Components/coordinates.js","Components/dice.js","Components/piece.js","Components/square.js","Components/step.js","sketch.js"],"names":["board","props","squares","console","log","final","dice","forEach","e","index","spacing","count","square","Square","push","color","location","steps","s","step","Step","x","y","safeSteps","filter","length","id","safe","currentIndex","setSteps","stepStart","update","type","choice","icon","highlight","mouseClicked","render","boardSize","COMMON","START","FINAL","END","coordinates","start","size","path","players","isThere","home","stepFinal","center","end","values","createVector","changed","current","show","rollAllowed","random","roll","error","randomArray","currentRandom","i","getRandom","setTimeout","fill","rect","textSize","text","pop","Piece","selected","stepLocation","offsetX","offsetY","game","move","switchPlayer","info","stroke","strokeWeight","strokeJoin","ROUND","ellipse","moveAllowed","f","finalStep","piece","find","getLocation","newPiece","outside","player","state","p","offset","rectMode","CORNER","stepAhead","property","value","triangle","ludo","colors","setup","createCanvas","draw","p5","background","onclick","play","currentSquare","currentDice","isOut","rollDice"],"mappings":"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","file":"sketch.52b2dfeb.js","sourceRoot":"..\\src","sourcesContent":["export default class board {\r\n    constructor(props) {\r\n        //Initialize all the class variables here.\r\n        this.squares = [];\r\n        console.log(\"Board.js is here\")\r\n        const final = [];\r\n        this.dice = new dice();\r\n        //Initializes homeSquares\r\n        props.squares.forEach((e, index) => {\r\n            //spacing constant\r\n            e.spacing = spacing;\r\n            e.count = index;\r\n            //creating new square from model SQUARE\r\n            const square = new Square(e);\r\n            //pushing the newly created homeSquares.\r\n            this.squares.push(square);\r\n            //pushing final data into final array.\r\n            final.push({\r\n                color: e.color,\r\n                location: e.final\r\n            });\r\n        });\r\n        //Steps Array.\r\n        this.steps = [];\r\n        var count = 0;\r\n        //Pushing a new step, and inserting into Array\r\n        props.steps.forEach(s => {\r\n            var step = new Step(s.x, s.y, spacing, count++);\r\n            var safe = props.safeSteps.filter(e => e === step.count);\r\n            if (safe.length > 0) {\r\n                step.id.safe = true;\r\n            } else {\r\n                step.id.safe = false;\r\n            }\r\n            this.steps.push(step);\r\n        });\r\n        //Current Player Count\r\n        this.currentIndex = 0;\r\n        //Setting up start squares.\r\n        this.setSteps(this.squares);\r\n    }\r\n    setSteps(squares) {\r\n        squares.forEach(e => {\r\n            //Coloring Start Squares\r\n            this.steps.forEach(s => {\r\n                if (s.x === e.stepStart.x && s.y === e.stepStart.y) {\r\n                    s.update('color', e.color);\r\n                    s.id.type = 'START';\r\n                }\r\n            });\r\n            if (e.count === this.currentIndex) {\r\n                this.update('switch', {\r\n                    count: this.currentIndex\r\n                });\r\n            }\r\n        });\r\n    }\r\n    update(choice, props) {\r\n        //update the player's position from here.\r\n        if (choice === 'move') {\r\n            this.squares.forEach(square => {\r\n                if (square.color === props.color) {\r\n                    square.update({\r\n                        icon: props.icon,\r\n                        location: props.location\r\n                    });\r\n                }\r\n            })\r\n        } else if (choice === 'switch') {\r\n            this.squares.forEach(square => {\r\n                square.highlight = false\r\n            });\r\n            this.squares.forEach(square => {\r\n                if (square.count === props.count) {\r\n                    square.highlight = true;\r\n                }\r\n            })\r\n        }\r\n    }\r\n    mouseClicked(e) {\r\n        this.squares.forEach(square => {\r\n            square.mouseClicked(e)\r\n        });\r\n        this.steps.forEach(step => {\r\n            step.mouseClicked(e)\r\n        });\r\n    }\r\n    render() {\r\n        this.steps.forEach(e => {\r\n            e.render()\r\n        });\r\n        this.squares.forEach(e => {\r\n            if (e.count != this.currentIndex) {\r\n                e.render();\r\n            }\r\n        });\r\n        this.squares[this.currentIndex].render();\r\n        this.dice.render();\r\n    }\r\n}","\r\nexport const boardSize = 500;\r\nexport const spacing = boardSize / 13;\r\nexport const COMMON = 'COMMON';\r\nexport const START = 'START';\r\nexport const FINAL = 'FINAL';\r\nexport const END = 'END';\r\n\r\nexport const coordinates = {\r\n    squares: [{\r\n        color: 'red',\r\n        start: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        size: 5,\r\n        path: [-1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\r\n            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48\r\n        ],\r\n        players: [{\r\n            isThere: true,\r\n            icon: 'R1',\r\n            location: {\r\n                x: 1,\r\n                y: 1\r\n            },\r\n            home: {\r\n                x: 1,\r\n                y: 1\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'R2',\r\n            location: {\r\n                x: 1,\r\n                y: 3\r\n            },\r\n            home: {\r\n                x: 1,\r\n                y: 3\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'R3',\r\n            location: {\r\n                x: 3,\r\n                y: 1\r\n            },\r\n            home: {\r\n                x: 3,\r\n                y: 1\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'R4',\r\n            location: {\r\n                x: 3,\r\n                y: 3\r\n            },\r\n            home: {\r\n                x: 3,\r\n                y: 3\r\n            }\r\n        }],\r\n        stepStart: {\r\n            x: 1,\r\n            y: 5\r\n        },\r\n        stepFinal: [{\r\n            x: 1,\r\n            y: 6\r\n        }, {\r\n            x: 2,\r\n            y: 6\r\n        }, {\r\n            x: 3,\r\n            y: 6\r\n        }, {\r\n            x: 4,\r\n            y: 6\r\n        }],\r\n        final: {\r\n            x: 5,\r\n            y: 6\r\n        }\r\n    }, {\r\n        color: 'yellow',\r\n        start: {\r\n            x: 0,\r\n            y: 8\r\n        },\r\n        size: 5,\r\n        path: [-1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\r\n            25, 26, 27, 28, 29, 30, 31, 32, 44, 45, 46, 47, 48\r\n        ],\r\n        players: [{\r\n            isThere: true,\r\n            icon: 'Y1',\r\n            location: {\r\n                x: 1,\r\n                y: 9\r\n            },\r\n            home: {\r\n                x: 1,\r\n                y: 9\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'Y2',\r\n            location: {\r\n                x: 1,\r\n                y: 11\r\n            },\r\n            home: {\r\n                x: 1,\r\n                y: 11\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'Y3',\r\n            location: {\r\n                x: 3,\r\n                y: 9\r\n            },\r\n            home: {\r\n                x: 3,\r\n                y: 9\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'Y4',\r\n            location: {\r\n                x: 3,\r\n                y: 11\r\n            },\r\n            home: {\r\n                x: 3,\r\n                y: 11\r\n            }\r\n        }],\r\n        stepStart: {\r\n            x: 5,\r\n            y: 11\r\n        },\r\n        stepFinal: [{\r\n            x: 6,\r\n            y: 11\r\n        }, {\r\n            x: 6,\r\n            y: 10\r\n        }, {\r\n            x: 6,\r\n            y: 9\r\n        }, {\r\n            x: 6,\r\n            y: 8\r\n        }],\r\n        final: {\r\n            x: 6,\r\n            y: 7\r\n        }\r\n    }, {\r\n        color: 'green',\r\n        start: {\r\n            x: 8,\r\n            y: 0\r\n        },\r\n        size: 5,\r\n        path: [-1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\r\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 44, 45, 46, 47, 48\r\n        ],\r\n        players: [{\r\n            isThere: true,\r\n            icon: 'G1',\r\n            location: {\r\n                x: 9,\r\n                y: 1\r\n            },\r\n            home: {\r\n                x: 9,\r\n                y: 1\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'G2',\r\n            location: {\r\n                x: 11,\r\n                y: 1\r\n            },\r\n            home: {\r\n                x: 11,\r\n                y: 1\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'G3',\r\n            location: {\r\n                x: 9,\r\n                y: 3\r\n            },\r\n            home: {\r\n                x: 9,\r\n                y: 3\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'G4',\r\n            location: {\r\n                x: 11,\r\n                y: 3\r\n            },\r\n            home: {\r\n                x: 11,\r\n                y: 3\r\n            }\r\n        }],\r\n        stepStart: {\r\n            x: 7,\r\n            y: 1\r\n        },\r\n        stepFinal: [{\r\n            x: 6,\r\n            y: 1\r\n        }, {\r\n            x: 6,\r\n            y: 2\r\n        }, {\r\n            x: 6,\r\n            y: 3\r\n        }, {\r\n            x: 6,\r\n            y: 4\r\n        }],\r\n        final: {\r\n            x: 6,\r\n            y: 5\r\n        }\r\n    }, {\r\n        color: 'blue',\r\n        start: {\r\n            x: 8,\r\n            y: 8\r\n        },\r\n        size: 5,\r\n        path: [-1, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\r\n            14, 15, 16, 17, 18, 19, 20, 21, 44, 45, 46, 47, 48\r\n        ],\r\n        players: [{\r\n            isThere: true,\r\n            icon: 'B1',\r\n            location: {\r\n                x: 9,\r\n                y: 9\r\n            },\r\n            home: {\r\n                x: 9,\r\n                y: 9\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'B2',\r\n            location: {\r\n                x: 9,\r\n                y: 11\r\n            },\r\n            home: {\r\n                x: 9,\r\n                y: 11\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'B3',\r\n            location: {\r\n                x: 11,\r\n                y: 9\r\n            },\r\n            home: {\r\n                x: 11,\r\n                y: 9\r\n            }\r\n        }, {\r\n            isThere: true,\r\n            icon: 'B4',\r\n            location: {\r\n                x: 11,\r\n                y: 11\r\n            },\r\n            home: {\r\n                x: 11,\r\n                y: 11\r\n            }\r\n        }],\r\n        stepStart: {\r\n            x: 11,\r\n            y: 7\r\n        },\r\n        stepFinal: [{\r\n            x: 11,\r\n            y: 6\r\n        }, {\r\n            x: 10,\r\n            y: 6\r\n        }, {\r\n            x: 9,\r\n            y: 6\r\n        }, {\r\n            x: 8,\r\n            y: 6\r\n        }],\r\n        final: {\r\n            x: 7,\r\n            y: 6\r\n        }\r\n    }],\r\n    center: {\r\n        start: {\r\n            x: 5,\r\n            y: 5\r\n        },\r\n        end: {\r\n            x: 7,\r\n            y: 7\r\n        }\r\n    },\r\n    steps: [{\r\n        x: 0,\r\n        y: 5\r\n    }, {\r\n        x: 1,\r\n        y: 5\r\n    }, {\r\n        x: 2,\r\n        y: 5\r\n    }, {\r\n        x: 3,\r\n        y: 5\r\n    }, {\r\n        x: 4,\r\n        y: 5\r\n    }, {\r\n        x: 5,\r\n        y: 4\r\n    }, {\r\n        x: 5,\r\n        y: 3\r\n    }, {\r\n        x: 5,\r\n        y: 2\r\n    }, {\r\n        x: 5,\r\n        y: 1\r\n    }, {\r\n        x: 5,\r\n        y: 0\r\n    }, {\r\n        x: 6,\r\n        y: 0\r\n    }, {\r\n        x: 7,\r\n        y: 0\r\n    }, {\r\n        x: 7,\r\n        y: 1\r\n    }, {\r\n        x: 7,\r\n        y: 2\r\n    }, {\r\n        x: 7,\r\n        y: 3\r\n    }, {\r\n        x: 7,\r\n        y: 4\r\n    }, {\r\n        x: 8,\r\n        y: 5\r\n    }, {\r\n        x: 9,\r\n        y: 5\r\n    }, {\r\n        x: 10,\r\n        y: 5\r\n    }, {\r\n        x: 11,\r\n        y: 5\r\n    }, {\r\n        x: 12,\r\n        y: 5\r\n    }, {\r\n        x: 12,\r\n        y: 6\r\n    }, {\r\n        x: 12,\r\n        y: 7\r\n    }, {\r\n        x: 11,\r\n        y: 7\r\n    }, {\r\n        x: 10,\r\n        y: 7\r\n    }, {\r\n        x: 9,\r\n        y: 7\r\n    }, {\r\n        x: 8,\r\n        y: 7\r\n    }, {\r\n        x: 7,\r\n        y: 8\r\n    }, {\r\n        x: 7,\r\n        y: 9\r\n    }, {\r\n        x: 7,\r\n        y: 10\r\n    }, {\r\n        x: 7,\r\n        y: 11\r\n    }, {\r\n        x: 7,\r\n        y: 12\r\n    }, {\r\n        x: 6,\r\n        y: 12\r\n    }, {\r\n        x: 5,\r\n        y: 12\r\n    }, {\r\n        x: 5,\r\n        y: 11\r\n    }, {\r\n        x: 5,\r\n        y: 10\r\n    }, {\r\n        x: 5,\r\n        y: 9\r\n    }, {\r\n        x: 5,\r\n        y: 8\r\n    }, {\r\n        x: 4,\r\n        y: 7\r\n    }, {\r\n        x: 3,\r\n        y: 7\r\n    }, {\r\n        x: 2,\r\n        y: 7\r\n    }, {\r\n        x: 1,\r\n        y: 7\r\n    }, {\r\n        x: 0,\r\n        y: 7\r\n    }, {\r\n        x: 0,\r\n        y: 6\r\n    }],\r\n    safeSteps: [1, 7, 12, 18, 23, 29, 34, 40],\r\n}\r\n","export default class dice {\r\n    constructor() {\r\n        //this.location = createVector(x, y, size);\r\n        this.values = [4, 5, 6];\r\n        this.location = createVector(235, 545);\r\n        this.spacing = 500 / 13;\r\n        this.changed = false;\r\n        this.current = 'D';\r\n        this.show = true;\r\n        this.rollAllowed = true;\r\n    }\r\n    getRandom() {\r\n        return random(this.values);\r\n    }\r\n    reset() {\r\n        this.changed = false;\r\n        this.current = 0;\r\n        this.show = true;\r\n    }\r\n    onclick() {\r\n        if (this.rollAllowed) {\r\n            this.roll();\r\n        } else {\r\n            console.error('Rolling Dice Not Allowed');\r\n        }\r\n    }\r\n    roll() {\r\n        this.show = false;\r\n        var randomArray = [],\r\n            currentRandom;\r\n        for (var i = 0; i < 1000; i++) {\r\n            currentRandom = this.getRandom();\r\n            this.current = currentRandom;\r\n            randomArray.push(currentRandom);\r\n        }\r\n        this.current = random(randomArray);\r\n        this.changed = true;\r\n        setTimeout(() => {\r\n            this.show = true;\r\n        }, 1000);\r\n        this.rollAllowed = false;\r\n    }\r\n    render() {\r\n        push();\r\n        if (this.show) {\r\n            fill('white');\r\n            rect(this.location.x, this.location.y, this.spacing, this.spacing);\r\n            fill(0);\r\n            textSize(32);\r\n            text(this.current, this.location.x + 10, this.location.y + 30);\r\n        }\r\n        if (this.changed) {\r\n            fill(0);\r\n            textSize(256);\r\n            text(this.current, 180, 300);\r\n            setTimeout(() => {\r\n                this.changed = false;\r\n            }, 600);\r\n        }\r\n        pop();\r\n    }\r\n}\r\n","export default class Piece {\r\n    constructor(x, y, home, spacing, icon, path) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.home = home;\r\n        this.highlight = false;\r\n        this.spacing = spacing;\r\n        this.path = path;\r\n        this.color = 0;\r\n        this.location = createVector(this.x * spacing, this.y * spacing);\r\n        this.icon = icon;\r\n        this.selected = false;\r\n        this.stepLocation = 0;\r\n    }\r\n    mouseClicked(e, step) {\r\n        //moving piece when clicked on.\r\n        if ((e.offsetX > this.location.x && e.offsetX < (this.location.x + this.spacing)) && (e.offsetY > this.location.y && e.offsetY < (this.location.y +\r\n                this.spacing))) {\r\n            //Mouse Clicked.\r\n            console.log('Mouse Clicked on Piece  : ' + this.icon + ',  Move :  ' + game.dice.current);\r\n            if (this.stepLocation > 0) {\r\n                move({\r\n                    icon: this.icon,\r\n                    count: game.dice.current\r\n                });\r\n            }\r\n        }\r\n    }\r\n    update(choice, props) {\r\n        //location\r\n        if (choice === 'move') {\r\n            console.log('updating the location of piece : ' + this.icon);\r\n            this.x = props.x;\r\n            this.y = props.y;\r\n            this.location = createVector(this.x * spacing, this.y * spacing);\r\n            switchPlayer();\r\n        } else if (choice === 'select') {\r\n            console.info('selected : ' + this.icon);\r\n            var location = this.path.location(this.path.count[this.stepLocation]);\r\n            if (this.path.count[this.stepLocation + 1]) {\r\n                this.update('move', location);\r\n            } else {\r\n                console.error('Piece  : ' + this.icon + '  Reached');\r\n                switchPlayer();\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        push();\r\n        //Drawing homes for players to be in.\r\n        fill(255);\r\n        if (this.highlight) {\r\n            stroke(this.color);\r\n            strokeWeight(5);\r\n            strokeJoin(ROUND);\r\n        }\r\n        rect(this.home.x * this.spacing, this.home.y * this.spacing, this.spacing, this.spacing, 10);\r\n        pop();\r\n        push();\r\n        strokeWeight(3);\r\n        fill(this.color);\r\n        ellipse(this.location.x + (this.spacing * 0.5), this.location.y + (this.spacing * 0.5), 0.5 * this.spacing, 0.5 * this.spacing);\r\n        pop();\r\n    }\r\n}\r\n","export default class Square {\r\n    //store the square template here.\r\n    constructor(props) {\r\n        //initialize the squares from here.\r\n        this.x = props.start.x;\r\n        this.y = props.start.y;\r\n        this.highlight = false;\r\n        this.moveAllowed = false;\r\n        this.count = props.count;\r\n        //spacing constant which is used to draw the spacing.\r\n        this.spacing = props.spacing;\r\n        //color of the square.\r\n        this.color = props.color;\r\n        //data of players pieces.\r\n        //this.players = props.players;\r\n        this.players = [];\r\n        this.path = props.path;\r\n        //this.location = createVector(props.start, props.end);\r\n        this.location = createVector(this.x * this.spacing, this.y * this.spacing);\r\n        this.size = props.size * this.spacing;\r\n        //PATH: starting step of the player\r\n        this.stepStart = props.stepStart;\r\n        //PATH: final step of player\r\n        this.stepFinal = [];\r\n        //Generating Final Squares.\r\n        props.stepFinal.forEach((f, i) => {\r\n            var finalStep = new Step(f.x, f.y, spacing, (i + 44));\r\n            finalStep.update('color', this.color);\r\n            finalStep.update('id', {\r\n                type: FINAL,\r\n                safe: true\r\n            });\r\n            this.stepFinal.push(finalStep);\r\n        });\r\n        //PATH: pieces which have reached the final succesfuly.\r\n        var final = new Step(props.final.x, props.final.y, spacing, 48);\r\n        final.update('color', this.color);\r\n        this.final = final;\r\n        props.players.forEach(piece => {\r\n            var path = {\r\n                count: this.path,\r\n                location: (count) => {\r\n                    if (count === -1) {\r\n                        //home\r\n                        return piece.home;\r\n                    } else if (count > -1 && count < 44) {\r\n                        //steps\r\n                        return game.steps.find(step => count === step.count).getLocation();\r\n                    } else if (count > 43 && count < 47) {\r\n                        //final\r\n                        return this.stepFinal.find(step => count === step.count).getLocation();\r\n                    } else if (count === 48) {\r\n                        //end\r\n                        return this.final.getLocation();\r\n                    }\r\n                },\r\n            }\r\n            var newPiece = new Piece(piece.location.x, piece.location.y, piece.home, this.spacing, piece.icon, path);\r\n            newPiece.color = this.color;\r\n            this.players.push(newPiece);\r\n        });\r\n    }\r\n    isOut() {\r\n        var outside = [];\r\n        this.players.forEach(player => {\r\n            if (player.stepLocation === -1) {\r\n                console.log('INSIDE');\r\n            } else if (player.stepLocation > 0 && player.stepLocation < 48) {\r\n                outside.push(player.icon);\r\n            }\r\n        });\r\n        if (outside.length < this.players.length && outside.length > 0) {\r\n            return ({\r\n                state: true,\r\n                count: outside\r\n            });\r\n        } else {\r\n            return ({\r\n                state: false,\r\n                count: outside\r\n            });\r\n        }\r\n    }\r\n    update(props) {\r\n        //update the squares from here.\r\n        this.players.forEach(player => {\r\n            if (player.icon === props.icon) {\r\n                console.log(props.dice);\r\n            }\r\n        })\r\n    }\r\n    mouseClicked(e) {\r\n        if ((e.offsetX > this.location.x && e.offsetX < (this.location.x + this.size)) && (e.offsetY > this.location.y && e.offsetY < (this.location.y +\r\n                this.size))) {\r\n            this.players.forEach(p => {\r\n                var x = p.location.x,\r\n                    y = p.location.y;\r\n                if ((e.offsetX > x && e.offsetX < (x + this.spacing)) && (e.offsetY > y && e.offsetY < (y + this.spacing))) {\r\n                    if (this.moveAllowed && p.stepLocation === 0) {\r\n                        //check if movement is valid\r\n                        console.log('Moving Out Of HOME');\r\n                        move({\r\n                            icon: p.icon,\r\n                            count: 1\r\n                        });\r\n                    } else {\r\n                        console.log('CLICKED BUT NO MOVEMENT ALLOWED');\r\n                        p.mouseClicked(e);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        this.stepFinal.forEach(step => {\r\n            step.mouseClicked(e)\r\n        });\r\n        this.final.mouseClicked(e);\r\n    }\r\n    render() {\r\n        var offset = 1;\r\n        push();\r\n        //Darwing base Squares. using the CORNER method.\r\n        rectMode(CORNER);\r\n        fill(this.color);\r\n        //check if this square's turn.\r\n        if (this.highlight) {\r\n            offset = 10;\r\n            stroke(this.color);\r\n            strokeWeight(offset);\r\n            strokeJoin(ROUND);\r\n            fill(255);\r\n        }\r\n        rect(this.location.x + (offset / 4), this.location.y + (offset / 4), this.size - (offset / 2), this.size - (offset / 2));\r\n        pop();\r\n        this.stepFinal.forEach(step => step.render());\r\n        this.final.render();\r\n        //Drawing Players if they are there.\r\n        this.players.forEach(p => p.render());\r\n        pop();\r\n    }\r\n}\r\n","export default class Step {\r\n    //store the steps template here.\r\n    constructor(x, y, spacing, count) {\r\n        //initialize each step here.\r\n        this.x = x;\r\n        this.y = y;\r\n        this.count = count;\r\n        this.location = createVector(x * spacing, y * spacing);\r\n        //spacing constant.\r\n        this.size = spacing;\r\n        //color of the step.\r\n        this.color = 255;\r\n        this.id = {\r\n            type: COMMON,\r\n            safe: false\r\n        };\r\n      \r\n      console.log(\"STEP IMPORTED\");\r\n    }\r\n    getLocation() {\r\n        return ({\r\n            x: this.x,\r\n            y: this.y\r\n        });\r\n    }\r\n    mouseClicked(e) {\r\n        if ((e.offsetX > this.location.x && e.offsetX < (this.location.x + this.size)) && (e.offsetY > this.location.y && e.offsetY < (this.location.y +\r\n                this.size))) {\r\n            //Step to which the current piece will move to\r\n            var stepAhead = this.count + game.dice.current;\r\n            //Check if any piece is already there, if yes, remove\r\n            game.squares.forEach(s => {\r\n                s.players.forEach(p => {\r\n                    if (p.stepLocation === stepAhead && s.count != game.currentIndex) {\r\n                        console.log('Found and Removing : ' + p.icon);\r\n                        move({\r\n                            icon: p.icon,\r\n                            count: (-1) * p.stepLocation,\r\n                        })\r\n                    }\r\n                });\r\n            });\r\n            game.squares[game.currentIndex].players.forEach(p => {\r\n                //check if player is here,\r\n                if (p.path.count[p.stepLocation] === this.count) {\r\n                    //found piece, move it.\r\n                    move({\r\n                        icon: p.icon,\r\n                        count: game.dice.current\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    update(property, value) {\r\n        //update the steps from here.\r\n        this[property] = value;\r\n    }\r\n    render() {\r\n        //render the steps from here.\r\n        if (this.count < 48) {\r\n            push();\r\n            fill(this.color);\r\n            stroke(1);\r\n            rect(this.location.x, this.location.y, this.size, this.size);\r\n            pop();\r\n        } else {\r\n            if (this.color === 'red') {\r\n                //Red Triangle goes here.\r\n                push();\r\n                fill(this.color);\r\n                stroke(1);\r\n                triangle(this.location.x + (this.size * 1.5), this.location.y + (this.size * 0.5), this.location.x, this.location.y - this.size, this\r\n                    .location.x, this.location.y + (this.size * 2));\r\n                pop();\r\n            } else if (this.color === 'green') {\r\n                //green\r\n                push();\r\n                fill(this.color);\r\n                stroke(1);\r\n                triangle(this.location.x + (this.size * 0.5), this.location.y + (this.size * 1.5), this.location.x + (2 * this.size), this.location.y, this\r\n                    .location.x - this.size, this.location.y);\r\n                pop();\r\n            } else if (this.color === 'yellow') {\r\n                //yellow\r\n                push();\r\n                fill(this.color);\r\n                stroke(1);\r\n                triangle(this.location.x + (this.size * 0.5), this.location.y - (this.size * 0.5), this.location.x - this.size, this.location.y + this.size,\r\n                    this.location.x + (this.size * 2), this.location.y + this.size);\r\n                pop();\r\n            } else if (this.color === 'blue') {\r\n                //blue\r\n                push();\r\n                fill(this.color);\r\n                stroke(1);\r\n                triangle(this.location.x - (this.size * 0.5), this.location.y + (this.size * 0.5), this.location.x + this.size, this.location.y - this.size,\r\n                    this.location.x + this.size, this.location.y + (this.size * 2));\r\n                pop();\r\n            }\r\n        }\r\n    }\r\n}\r\n","import './Components/board.js'\r\nimport './Components/coordinates.js'\r\nimport './Components/dice.js'\r\nimport './Components/piece.js'\r\nimport './Components/square.js'\r\nimport './Components/step.js'\r\n\r\nvar game = {},\r\n  i = 0,\r\n  ludo = {},\r\n  colors = ['yellow', 'blue', 'green', 'red'];\r\n\r\n//function preload() {\r\n//  soundFormats('mp3', 'ogg');\r\n//  moveSound = loadSound('./Sounds/move');\r\n//}\r\n\r\n\r\nfunction setup() {\r\n  createCanvas(600, 600);\r\n  console.log(\"Sketch.js is here\")\r\n  game = new board(coordinates);\r\n}\r\n\r\nfunction draw() {\r\n  p5.background(255);\r\n  game.render();\r\n}\r\n\r\nfunction mouseClicked(e) {\r\n  var dice = game.dice.location,\r\n    spacing = game.dice.spacing;\r\n  if ((e.offsetX > dice.x && e.offsetX < dice.x + spacing) && (e.offsetY > dice.y && e.offsetY < dice.y + spacing)) {\r\n    game.dice.onclick();\r\n    play();\r\n//    moveSound.play();\r\n  }\r\n  game.mouseClicked(e);\r\n}\r\n\r\n\r\n\r\nfunction play() {  \r\n  const currentSquare = game.squares[game.currentIndex];\r\n  const currentDice = game.dice.current;\r\n  \r\n  if (currentSquare.isOut().state) {\r\n    //atleast one piece is out,\r\n    if (currentSquare.isOut().count.length === 1 && currentDice != 6) {\r\n      //only one is out, so move it\r\n      currentSquare.players.forEach(p => {\r\n        if (p.icon === currentSquare.isOut().count[0]) {\r\n          console.log('only one is out, so move it');\r\n          move({\r\n            icon: p.icon,\r\n            count: currentDice\r\n          });\r\n        }\r\n      })\r\n    } else if (currentSquare.isOut().count.length > 1) {\r\n      //more than one is out, move according to choice.\r\n      currentSquare.moveAllowed = true;\r\n    }\r\n  } else {\r\n    //none of the pieces are outside.\r\n    if (currentDice === 6) {\r\n      currentSquare.moveAllowed = true;\r\n    } else {\r\n      switchPlayer();\r\n    }\r\n  }\r\n}\r\n\r\nfunction move(props) {\r\n  game.squares[game.currentIndex].players.forEach(p => {\r\n    if (p.icon === props.icon) {\r\n      console.info('Found Piece  : ' + p.icon);\r\n      if (p.stepLocation + props.count + 1 < p.path.count.length) {\r\n        console.info('MOVING : ' + props.count);\r\n        p.stepLocation += props.count;\r\n        p.update('select');\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction rollDice(state){\r\n  game.dice.rollAllowed = state;\r\n}\r\n\r\nfunction switchPlayer() {\r\n  \r\n  console.log('switching__' + ++i + '  Dice : ' + game.dice.current + '  Color : ' + game.squares[game.currentIndex].color);\r\n  \r\n  if (game.currentIndex <= 2) {\r\n    game.currentIndex += 1;\r\n  } else {\r\n    game.currentIndex = 0;\r\n  }\r\n  game.update('switch', {\r\n    count: game.currentIndex\r\n  });\r\n  rollDice(true);\r\n}\r\n\r\n/*\r\nRemaining : \r\n- Aging Movement - done\r\n- Multiple Pieces in same step, \r\n- killing of one piece by another,\r\n- Showing Safe Steps,\r\n- Reset Dice on every Move.\r\n*/\r\n\r\n"]}